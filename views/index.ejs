	<% include header %>

	<div class="container-fluid" ng-controller="MainCtrl">
		<div class="row">
			<div class="col-md-1 col-sm-0">
				
			</div>
			<div class="col-md-10 col-sm-12">
				<div class="page-header">
					<h1>
						<fa name="youtube-play" aria-hidden="true" ng-style="{'color': logoColor}"></fa> <%- title %>
						<small>LAN Youtube player</small>
					</h1>
				</div>
			</div>
			<div class="col-md-1 col-sm-0">
				
			</div>
		</div>
		<div class="row">
			<div class="col-md-1 col-sm-0">
				
			</div>
			<div class="col-md-5 col-sm-12">
				<form class="form">
					<p>Append any Youtube video to the list</p>
					<div class="input-group">
						<input id="video" type="text" class="form-control" placeholder="Link del video de Youtube..." ng-model="videourl" value="" select-on-click>
						<span class="input-group-btn">
							<button id="agregar" class="btn btn-primary" type="button" ng-click="add(videourl, videos.length + 1)">Add</button>
						</span>
					</div><!-- /input-group -->
					<br>

					<div class="form-group"> 
						<label>{{videoModes.title}}</label>
						<div class="radio">
							<label>
								<input ng-model="videoModes.selected" type="radio" name="videoMode" value="{{videoModes.modes.fullscreen.toLowerCase().replace(' ', '-')}}">
								{{videoModes.modes.fullscreen}}
							</label>
						</div>
						<div class="radio">
							<label>
								<input ng-model="videoModes.selected" type="radio" name="videoMode" value="{{videoModes.modes.windowed.toLowerCase().replace(' ', '-')}}">
								{{videoModes.modes.windowed}}
							</label>
						</div>
						<div class="radio">
							<label>
								<input ng-model="videoModes.selected" type="radio" name="videoMode" value="{{videoModes.modes.noVideo.toLowerCase().replace(' ', '-')}}">
								{{videoModes.modes.noVideo}}
							</label>
						</div>
						
					</div>
					<br>
					
					<div class="text-warning" ng-show="videos.length == 0">
						No videos added to Lantube yet!
					</div>
					
					Volume: 
					<span ng-models="volume">{{playerVolume}}%</span>
					<br>
					<button ng-click="setVolume('down')" class="btn btn-primary" type="button" name="volume-down"><fa name="arrow-down"> </fa></button> | 
					<button ng-click="setVolume('up')" class="btn btn-primary" type="button" name="volume-up"><fa name="arrow-up"> </fa></button>
					<br>
					<style media="screen">
						#slider {
						  width: 0;
						  height: 0;
						  position: relative;
						  background: #999;
						  -webkit-border-radius: 10px;
						  -moz-border-radius: 10px;
						  border-radius: 10px;
						  -webkit-box-shadow: inset 0px 0px 1px 1px rgba(0, 0, 0, 0.9), 0px 1px 1px 0px rgba(255, 255, 255, 0.13);
						  -moz-box-shadow: inset 0px 0px 1px 1px rgba(0, 0, 0, 0.9), 0px 1px 1px 0px rgba(255, 255, 255, 0.13);
						  box-shadow: inset 0px 0px 1px 1px rgba(0, 0, 0, 0.9), 0px 1px 1px 0px rgba(255, 255, 255, 0.13);
						}
						#slider .bar {
						  width: 388px;
						  height: 30px;
						  background: #333;
						  background: #1d2e38;
						  background: -moz-linear-gradient(left, #1d2e38 0%, #2b4254 50%, #2b4254 100%);
						  background: -webkit-gradient(linear, left top, right top, color-stop(0%, #1d2e38), color-stop(50%, #2b4254), color-stop(100%, #2b4254));
						  background: -webkit-linear-gradient(left, #1d2e38 0%, #2b4254 50%, #2b4254 100%);
						  background: -o-linear-gradient(left, #1d2e38 0%, #2b4254 50%, #2b4254 100%);
						  background: -ms-linear-gradient(left, #1d2e38 0%, #2b4254 50%, #2b4254 100%);
						  background: linear-gradient(left, #1d2e38 0%, #2b4254 50%, #2b4254 100%);
						  filter: progid: DXImageTransform.Microsoft.gradient(startColorstr='#1d2e38', endColorstr='#2b4254', GradientType=1);
						  -webkit-border-radius: 10px;
						  -moz-border-radius: 10px;
						  border-radius: 10px;
						}
						#slider .highlight {
						  height: 2px;
						  position: absolute;
						  width: 388px;
						  top: 6px;
						  left: 6px;
						  -webkit-border-radius: 40px;
						  -moz-border-radius: 40px;
						  border-radius: 40px;
						  background: rgba(255, 255, 255, 0.25);
						}
						input[type="range"] {
						  -webkit-appearance: none;
						  background-color: black;
						  height: 2px;
						}
						input[type="range"]::-webkit-slider-thumb {
						  -webkit-appearance: none;
						  position: relative;
						  top: 0px;
						  z-index: 1;
						  width: 15px;
						  height: 25px;
						  cursor: pointer;
						  -webkit-box-shadow: 0px 6px 5px 0px rgba(0, 0, 0, 0.6);
						  -moz-box-shadow: 0px 6px 5px 0px rgba(0, 0, 0, 0.6);
						  box-shadow: 0px 6px 5px 0px rgba(0, 0, 0, 0.6);
						  -webkit-border-radius: 10px;
						  -moz-border-radius: 10px;
						  border-radius: 10px;
						  background: white;
						}
						input[type="range"]:hover ~ #rangevalue,
						input[type="range"]:active ~ #rangevalue {
						  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
						  filter: alpha(opacity=100);
						  opacity: 1;
						  top: -75px;
						}
						/* Tool Tip */

						#rangevalue {
						  color: white;
						  font-size: 10px;
						  text-align: center;
						  font-family: Arial, sans-serif;
						  display: block;
						  color: #fff;
						  margin: 20px 0;
						  position: relative;
						  left: 44.5%;
						  padding: 6px 12px;
						  border: 1px solid black;
						  -webkit-box-shadow: inset 0px 1px 1px 0px rgba(255, 255, 255, 0.2), 0px 2px 4px 0px rgba(0, 0, 0, 0.4);
						  -moz-box-shadow: inset 0px 1px 1px 0px rgba(255, 255, 255, 0.2), 0px 2px 4px 0px rgba(0, 0, 0, 0.4);
						  box-shadow: inset 0px 1px 1px 0px rgba(255, 255, 255, 0.2), 0px 2px 4px 0px rgba(0, 0, 0, 0.4);
						  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #222931), color-stop(100%, #181D21));
						  -webkit-border-radius: 20px;
						  -moz-border-radius: 20px;
						  border-radius: 20px;
						  width: 18px;
						  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
						  filter: alpha(opacity=0);
						  opacity: 0;
						  -webkit-transition: all 0.5s ease;
						  -moz-transition: all 0.5s ease;
						  -o-transition: all 0.5s ease;
						  -ms-transition: all 0.5s ease;
						  transition: all 0.5s ease;
						  top: -95px;
						}
					</style>
					
					<div ng-hide="true" id="slider">
						<input class="bar form-control" id="volume-range" type="range" name="volume-range" value="{{playerVolume}}" min="0" max="100" step="1">
						<output ng-hide="true" id="rangevalue" name="result">{{playerVolume}}</output>
					</div>
					
					<br>
					<br>
					<span ng-hide="showStop() || videos.length == 0">{{playAllText()}}: </span>
					<button ng-hide="showStop() || videos.length == 0" class="btn btn-success" type="button" name="play" ng-click="play('all', videoModes.selected)">
						<fa name="{{ isPlaying() != 0 ? 'circle-o-notch' : 'play' }}" alt="Loading" size="1" spin="{{ isPlaying() != 0 }}" ng-style="{'color': spinnerColor}"></fa> 
					</button>
					
					<span ng-show="showStop()">{{stopText()}}: </span>
					<button ng-show="showStop()" class="btn btn-danger" type="button" ng-click="stop()">
						<fa name="stop" alt="Stop" size="1" ng-style="{'color': spinnerColor}"></fa> 
					</button> 
					
					<br>
					<br>
					<div class="bg-success now-playing" ng-show="nowPlaying()" ng-style="{'color': playingColor}">
						<fa name="volume-up" alt="Playing..." size="1" ng-class="nowPlaying() && 'blink'" ng-style="{'color': speakerColor}"></fa>
						<b>Now playing:</b> {{ nowPlaying() }}
					</div>
				</form>
				<br>
			</div>
			<div class="col-md-6 col-sm-0">
				
			</div>
			
		</div>
		
		<div class="row">
			<div class="col-md-1 col-sm-0">
				
			</div>
			<div class="col-md-10 col-sm-12">
			
			</div>
			<div class="col-md-1 col-sm-0">
				
			</div>
		</div>
		
		<div class="row">
			<div class="col-md-1 col-sm-0">
				
			</div>
			<div class="col-md-10 col-sm-12">
				<table class="table table-striped lista-videos">
					<tr ng-repeat="video in videos">
						<td class="orden">
							<div class="table-text">
								{{$index + 1}}
							</div>
						</td>
						<td>
							<button class="play btn-sm btn-danger" type="button" ng-click="play(video._id, videoModes.selected)">
								<fa ng-cloak="{{ isPlaying() == video._id }}" 
									name="{{ isPlaying() == video._id ? 'circle-o-notch' : 'play' }}" 
									spin="{{ isPlaying() == video._id }}" 
									size="1">
								</fa>
							</button>
						</td>
						<td class="titulo">
							<div class="table-text">
								{{video.title}}
							</div>
						</td>
						<td class="url">
							<div class="table-text">
								{{video.url}}
							</div>
						</td>
					</tr>
				</table>
			</div>
			<div class="col-md-1 col-sm-0">
				
			</div>
		</div>
		<div class="row">
			<div class="col-md-1">
				
			</div>
			<div class="col-md-10">
			</div>
			<div class="col-md-1">
				
			</div>
		</div>
	</div>
	

	<% include footer %>
